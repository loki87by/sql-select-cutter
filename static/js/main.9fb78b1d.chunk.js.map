{"version":3,"sources":["utils/consts.js","components/InputSection/InputSection.js","assets/copy.svg","components/Table/Table.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["stringUpdater","str","replace","match","p1","p2","p3","p4","arrayUpdater","array","notNullIndexes","map","i","ind","includes","filter","InputSection","props","dataSelectValue","setDataSelectValue","useState","selectValue","setSelectValue","tmpArray","setTmpArray","baseData","namesSelectValue","updateParentData","data","arg","point","oldData","slice","newData","tmp","split","length","pop","setNamesSelectValue","_jsxs","children","_jsx","htmlFor","concat","index","type","id","name","placeholder","value","onChange","e","target","defaultValue","onClick","nextIndex","setTablesArray","tablesArray","Table","clipboard","useClipboard","onError","alert","copiedTimeout","row","cell","title","src","copy","alt","string","forEach","el","copyColumn","App","isScriptRunned","setScriptRunned","isDataInputed","setDataInputed","namesArray","setNamesArray","result","setResult","dataArray","setDataArray","fullLength","setFullLength","NaN","setNames","val","q","columnsQ","arr","diff","push","full","flat","arrayLengthStabilizate","_Fragment","Math","pow","className","disabled","stringLength","k","tmpArr","every","res","currentVal","tmpDataArr","insideQuotes","insideBrackets","insideCurlyBraces","currentPiece","stringSplitter","setData","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fb78b1d.chunk.js","sourcesContent":["export function stringUpdater(str) {\n  return str.replace(\n    /('[^']*')|(\"[^\"]*\")|(\\([^)]*\\))|(\\{[^}]*\\})|\\s/g,\n    (match, p1, p2, p3, p4) => {\n      if (p1 || p2 || p3 || p4) {\n        return match;\n      } else {\n        return \"\\n\";\n      }\n    }\n  );\n}\n\nexport function stringSplitter(str) {\n  const separator = \",\";\n  let insideQuotes = false;\n  let insideBrackets = 0;\n  let insideCurlyBraces = 0;\n  let result = [];\n  let currentPiece = \"\";\n\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === \"'\" || str[i] === '\"') {\n      insideQuotes = !insideQuotes;\n    } else if (str[i] === \"[\" && !insideQuotes) {\n      insideBrackets++;\n    } else if (str[i] === \"]\" && !insideQuotes) {\n      insideBrackets--;\n    } else if (str[i] === \"{\" && !insideQuotes) {\n      insideCurlyBraces++;\n    } else if (str[i] === \"}\" && !insideQuotes) {\n      insideCurlyBraces--;\n    }\n\n    if (\n      str[i] === separator &&\n      !insideQuotes &&\n      insideBrackets === 0 &&\n      insideCurlyBraces === 0\n    ) {\n      result.push(currentPiece);\n      currentPiece = \"\";\n    } else {\n      currentPiece += str[i];\n    }\n  }\n\n  result.push(currentPiece);\n  return result;\n}\n\nexport function arrayUpdater(array, notNullIndexes) {\n  const arrayUpdate = array.map((i, ind) => {\n    if (notNullIndexes.includes(ind)) {\n      return i;\n    } else {\n      return null;\n    }\n  });\n  return arrayUpdate.filter((i) => i !== null);\n}\n","import React, { useState } from \"react\";\nimport { stringUpdater } from \"../../utils/consts\";\nimport \"./InputSection.css\";\n\nfunction InputSection(props) {\n  const [dataSelectValue, setDataSelectValue] = useState(\"\");\n  const [selectValue, setSelectValue] = useState(0);\n  const [tmpArray, setTmpArray] = useState(0);\n  const baseData = props.namesSelectValue;\n\n  function updateParentData(data) {\n    const { arg, point } = data;\n    const oldData = baseData.slice();\n    let newData = [...oldData];\n    let tmp = [];\n\n    if (arg) {\n      const currentVal = stringUpdater(arg);\n      // eslint-disable-next-line no-useless-escape\n      tmp = currentVal.split(/\\,?\\r\\n|\\,?\\r|\\,?\\n/g);\n      setTmpArray(tmp);\n\n      if (tmp[tmp.length - 1].length === 1 && tmp[0].length > 1) {\n        tmp.pop();\n        setTmpArray(tmp);\n      }\n    } else {\n      tmp = tmpArray.slice();\n    }\n\n    if ((arg && selectValue > 0) || point > 0) {\n      newData = [...tmp, ...oldData];\n    } else {\n      newData = [...oldData, ...tmp];\n    }\n    props.setNamesSelectValue(newData);\n  }\n\n  function setInputData(e) {\n    setDataSelectValue(e.target.value);\n    updateParentData({ arg: e.target.value });\n  }\n\n  function setSelectData(e) {\n    setSelectValue(e.target.value);\n    updateParentData({ point: e.target.value });\n  }\n\n  function addSection() {\n    const nextIndex = props.index + 1;\n    props.setTablesArray([...props.tablesArray, nextIndex]);\n  }\n\n  return (\n    <article>\n      <label htmlFor={`names_${props.index}_input`}>\n        Вставьте имена столбцов\n      </label>\n      <input\n        type=\"text\"\n        id={`names_${props.index}_input`}\n        name={`names_${props.index}_input`}\n        placeholder=\"Вставьте имена столбцов\"\n        value={dataSelectValue}\n        onChange={setInputData}\n      />\n      {props.index > 1 ? (\n        <select defaultValue={0} onChange={setSelectData}>\n          <option value={0}>добавить справа</option>\n          <option value={1}>добавить слева</option>\n        </select>\n      ) : (\n        \"\"\n      )}\n      <button type=\"button\" onClick={addSection}>\n        добавить столбцы\n      </button>\n    </article>\n  );\n}\n\nexport default InputSection;\n","export default __webpack_public_path__ + \"static/media/copy.067cf7a4.svg\";","import React from \"react\";\nimport { useClipboard } from \"use-clipboard-copy\";\nimport copy from \"../../assets/copy.svg\";\nimport \"./Table.css\";\n\nfunction Table(props) {\n  const clipboard = useClipboard({\n    onError() {\n      alert(\"Произошла непредвиденная ошибка\");\n    },\n    copiedTimeout: 3000,\n  });\n\n  function copyColumn(index) {\n    let string = \"\";\n    props.data.forEach((el, ind) => {\n      if (ind === 0) {\n        string = `${el[index]}: `;\n      } else if (ind === props.data.length - 1) {\n        string += `${el[index]}.`;\n      } else {\n        string += `${el[index]}, `;\n      }\n      clipboard.copy(string);\n    });\n  }\n\n  return (\n    <table>\n      <tbody>\n        {props.data.map((row, ind) => (\n          <tr key={`row-${ind}`}>\n            {row.map((cell, index) => (\n              <td\n                title={ind === 1 ? \"копировать данные столбца в буфер\" : \"\"}\n                key={`cell-${index}`}\n              >\n                {cell}\n                {ind === 0 ? (\n                  <img\n                    src={copy}\n                    alt=\"копировать\"\n                    onClick={() => {\n                      copyColumn(index);\n                    }}\n                  />\n                ) : (\n                  \"\"\n                )}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n","import React, { useState } from \"react\";\nimport InputSection from \"../InputSection/InputSection\";\nimport Table from \"../Table/Table\";\nimport {\n  stringUpdater,\n  stringSplitter,\n  arrayUpdater,\n} from \"../../utils/consts\";\nimport \"../../vendor/normalize.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const [isScriptRunned, setScriptRunned] = useState(false);\n  const [isDataInputed, setDataInputed] = useState(false);\n  const [namesArray, setNamesArray] = useState([]);\n  const [result, setResult] = useState([]);\n  const [dataArray, setDataArray] = useState([]);\n  const [tablesArray, setTablesArray] = useState([1]);\n  const [fullLength, setFullLength] = useState(NaN);\n  const [dataSelectValue, setDataSelectValue] = useState(\"\");\n  const [namesSelectValue, setNamesSelectValue] = useState(\"\");\n\n  function arrayLengthStabilizate(q) {\n    const columnsQ = q;\n    const array = dataArray.slice();\n    array.forEach((arr, index) => {\n      let diff;\n\n      if (arr.length < columnsQ) {\n        diff = columnsQ - arr.length;\n\n        for (let i = 0; i < diff; i++) {\n          array[index].push(\"\");\n        }\n      }\n\n      if (arr.length > columnsQ) {\n        diff = arr.length - columnsQ;\n\n        for (let i = 0; i < diff; i++) {\n          array[index].pop();\n        }\n      }\n    });\n    setDataArray(array);\n    const full = array.flat();\n    setFullLength(full.length);\n  }\n\n  function setData(val) {\n    if (!isDataInputed) {\n      const currentVal = stringUpdater(val);\n      setDataSelectValue(currentVal);\n      const tmp = currentVal.split(/\\r\\n|\\r|\\n/g);\n\n      if (tmp[tmp.length - 1].length === 1 && tmp[0].length > 1) {\n        tmp.pop();\n      }\n\n      if (tmp[tmp.length - 1].length === 1 && tmp[0].length > 1) {\n        tmp.pop();\n      }\n      const tmpDataArr = [];\n      tmp.forEach((i) => {\n        const arr = stringSplitter(i);\n        tmpDataArr.push(arr);\n      });\n      setDataArray(tmpDataArr);\n      setDataInputed(true);\n    }\n  }\n\n  function setNames(val) {\n    if (namesSelectValue === \"\") {\n      setNamesSelectValue(val);\n    }\n\n    if (val[val.length - 1].length === 1 && val[0].length > 1) {\n      val.pop();\n    }\n    setNamesArray(val);\n    arrayLengthStabilizate(val.length);\n  }\n\n  function script() {\n    const stringLength = fullLength / namesArray.length;\n    const tmp = [];\n\n    for (let k = 0; k < namesArray.length; k++) {\n      let tmpArr = [];\n\n      for (let i = 0; i < stringLength; i++) {\n        tmpArr.push(dataArray[i][k]);\n      }\n\n      if (!tmpArr.every((el) => el === \"\")) {\n        tmp.push(k);\n      }\n      setScriptRunned(false);\n    }\n    const arr2upd = arrayUpdater(namesArray, tmp);\n    const arr1upd = dataArray.map((i) => arrayUpdater(i, tmp));\n    const res = [arr2upd, ...arr1upd];\n    setResult(res.filter((i) => !i.every((k) => k === \"\")));\n    setScriptRunned(true);\n  }\n\n  return !isScriptRunned ? (\n    <section>\n      {!isDataInputed ? (\n        <article>\n          <label htmlFor=\"data_input\">Вставьте данные </label>\n          <input\n            type=\"text\"\n            id=\"data_input\"\n            name=\"data_input\"\n            placeholder=\"Вставьте данные\"\n            value={dataSelectValue}\n            onChange={(e) => setData(e.target.value)}\n          />\n        </article>\n      ) : (\n        <>\n          <p>Данные приняты</p>\n          {tablesArray.map((i) => (\n            <InputSection\n              key={`input_section-${Math.pow(i, i)}`}\n              index={i}\n              tablesArray={tablesArray}\n              namesSelectValue={namesSelectValue}\n              setTablesArray={setTablesArray}\n              setNamesSelectValue={setNames}\n            />\n          ))}\n          <button\n            className=\"main_button\"\n            disabled={namesArray.length === 0}\n            onClick={script}\n          >\n            Run\n          </button>\n        </>\n      )}\n    </section>\n  ) : (\n    <Table data={result} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}