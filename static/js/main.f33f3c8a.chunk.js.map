{"version":3,"sources":["utils/consts.js","assets/copy.svg","components/Alias/Alias.js","components/Table/Table.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["arrayUpdater","array","notNullIndexes","map","i","ind","includes","filter","Alias","props","isDataInputed","setDataInputed","useState","sqlQuery","concat","data","table","clipboard","useClipboard","onError","alert","copiedTimeout","_jsx","children","_jsxs","onClick","copy","src","alt","htmlFor","index","type","id","name","placeholder","value","onChange","e","val","arr","aliases","slice","push","split","alias","setAliases","setData","target","Table","row","cell","title","string","forEach","el","length","copyColumn","App","isScriptRunned","setScriptRunned","namesArray","setNamesArray","result","setResult","dataArray","setDataArray","dataSelectValue","setDataSelectValue","namesDataSelectValue","setNamesDataSelectValue","namesInputed","setNamesInputed","fullTables","setFullTables","useEffect","finString","replace","match","cur","find","newData","toLowerCase","p1","p2","_Fragment","arg","str","alls","tables","toUpperCase","element","findIndex","checkFullTables","item","className","disabled","first","curr","next","dataUpdater","q","columnsQ","tmp","arrayLengthStabilizate","console","log","k","tmpArr","every","undefined","res","currentVal","inputString","temp","inTag","inQuotes","trim","stringUpdater","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f33f3c8a.chunk.js","sourcesContent":["/* eslint-disable no-useless-escape */\n\nexport function stringUpdater(str) {\n  const inputString = str.replace(/( +)|(\\n+)/g, (match, p1, p2) => {\n    if (p1) {\n      return \" \";\n    } else if (p2) {\n      return \", \";\n    } else {\n      return match;\n    }\n  });\n  let result = [];\n  let temp = \"\";\n  let inTag = false;\n  let inQuotes = false;\n\n  for (let i = 0; i < inputString.length; i++) {\n    if (inputString[i] === \"<\") {\n      inTag = true;\n    } else if (inputString[i] === \">\") {\n      inTag = false;\n    } else if (inputString[i] === '\"' && !inTag) {\n      inQuotes = !inQuotes;\n    } else if (inputString[i] === \",\" && !inTag && !inQuotes) {\n      result.push(temp);\n      temp = \"\";\n    } else {\n      temp += inputString[i];\n    }\n  }\n  result.push(temp);\n  return result.map((val) => (val.trim() === \"\" ? null : val.trim()));\n}\n\nexport function arrayUpdater(array, notNullIndexes) {\n  const arrayUpdate = array.map((i, ind) => {\n    if (notNullIndexes.includes(ind)) {\n      return i;\n    } else {\n      return null;\n    }\n  });\n  return arrayUpdate.filter((i) => i !== null);\n}\n\nexport const selectCutter = (data) => {\n  const select = data\n    .toLowerCase()\n    .replace(/select\\s*/, \"\")\n    .replace(/\\s*from\\s[\\s\\S]*/, \"\");\n  const string = select.replace(/( +)|(\\n)/g, (match, p1, p2) => {\n    if (p1) {\n      return \" \";\n    } else if (p2) {\n      return \"\\n\";\n    } else {\n      return match;\n    }\n  });\n  const array = string.replace(' ', '').split(',');\n  const res = array.map((i) => {\n    return i.replace(/^\\S*\\s/, \"\");\n  });\n  return res;\n};\n\nexport function arrayLengthStabilizate(q, arr) {\n  const columnsQ = q;\n  let array = [];\n  if (arr.length === columnsQ) {\n    array.push(arr);\n  } else {\n    for (let i = 1; i <= arr.length / columnsQ; i++) {\n      const tmp = [];\n      arr.forEach((item, ind) => {\n        if (ind < columnsQ * i && ind >= columnsQ * (i - 1)) {\n          tmp.push(item);\n        }\n      });\n      array.push(tmp);\n    }\n  }\n  return array;}\n\nexport const queryStart = `SELECT column_name\nFROM USER_TAB_COLUMNS\nWHERE table_name = '`\n\nexport const queryEnd = `'\norder by column_id;`\n","export default __webpack_public_path__ + \"static/media/copy.067cf7a4.svg\";","import React, { useState } from \"react\";\nimport { useClipboard } from \"use-clipboard-copy\";\nimport { queryStart, queryEnd } from \"../../utils/consts\";\nimport copy from \"../../assets/copy.svg\";\nimport \"./Alias.css\";\n\nfunction Alias(props) {\n  const [isDataInputed, setDataInputed] = useState(false);\n\n  const sqlQuery = `${queryStart}${props.data.table}${queryEnd}`;\n\n  const clipboard = useClipboard({\n    onError() {\n      alert(\"Произошла непредвиденная ошибка\");\n    },\n    copiedTimeout: 3000,\n  });\n\n  function copyCode() {\n    clipboard.copy(sqlQuery);\n  }\n\n  function setData(val) {\n    const arr = props.aliases.slice();\n    arr.push({\n      data: val.split(/,|\\s+/),\n      alias: props.data.alias,\n    });\n    setDataInputed(true);\n    props.setAliases(arr);\n  }\n\n  return !isDataInputed ? (\n    <section>\n      <p>Скопируйте следующий код:</p>\n      <code>{sqlQuery}</code>\n      <article onClick={copyCode}>\n        <img src={copy} alt=\"копировать\" />\n        <p>Скопировать код</p>\n      </article>\n      <p>Вставьте его в свою IDE и запустите</p>\n      <article>\n        <label htmlFor={`alias_${props.index}_input`}>\n          Вставьте данные (результат запроса)\n        </label>\n        <input\n          type=\"text\"\n          id={`alias_${props.index}_input`}\n          name={`alias_${props.index}_input`}\n          placeholder=\"Вставьте данные\"\n          value={\"\"}\n          onChange={(e) => setData(e.target.value)}\n        />\n      </article>\n    </section>\n  ) : (\n    <p>Данные приняты</p>\n  );\n}\n\nexport default Alias;\n","import React from \"react\";\r\nimport { useClipboard } from \"use-clipboard-copy\";\r\nimport copy from \"../../assets/copy.svg\";\r\nimport \"./Table.css\";\r\n\r\nfunction Table(props) {\r\n  const clipboard = useClipboard({\r\n    onError() {\r\n      alert(\"Произошла непредвиденная ошибка\");\r\n    },\r\n    copiedTimeout: 3000,\r\n  });\r\n\r\n  function copyColumn(index) {\r\n    let string = \"\";\r\n    props.data.forEach((el, ind) => {\r\n      if (ind === 0) {\r\n        string = `${el[index]}: `;\r\n      } else if (ind === props.data.length - 1) {\r\n        string += `${el[index]}.`;\r\n      } else {\r\n        string += `${el[index]}, `;\r\n      }\r\n      clipboard.copy(string);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        {props.data.map((row, ind) => (\r\n          <tr key={`row-${ind}`}>\r\n            {row.map((cell, index) => (\r\n              <td\r\n                title={ind === 1 ? \"копировать данные столбца в буфер\" : \"\"}\r\n                key={`cell-${index}`}\r\n              >\r\n                {cell}\r\n                {ind === 0 ? (\r\n                  <img\r\n                    src={copy}\r\n                    alt=\"копировать\"\r\n                    onClick={() => {\r\n                      copyColumn(index);\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, { useEffect, useState } from \"react\";\nimport Alias from \"../Alias/Alias\";\nimport Table from \"../Table/Table\";\nimport {\n  stringUpdater,\n  arrayUpdater,\n  selectCutter,\n  arrayLengthStabilizate,\n} from \"../../utils/consts\";\nimport \"../../vendor/normalize.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const [isScriptRunned, setScriptRunned] = useState(false);\n  const [isDataInputed, setDataInputed] = useState(false);\n  const [namesArray, setNamesArray] = useState([]);\n  const [result, setResult] = useState([]);\n  const [dataArray, setDataArray] = useState([]);\n  const [dataSelectValue, setDataSelectValue] = useState(\"\");\n  const [namesDataSelectValue, setNamesDataSelectValue] = useState(\"\");\n  const [namesInputed, setNamesInputed] = useState(false);\n  const [fullTables, setFullTables] = useState([]);\n  const [aliases, setAliases] = useState([]);\n\n  function checkFullTables(str) {\n    const alls = str.match(/\\S+\\.\\*/gi);\n    const tables = str.toUpperCase().replace(/(\\S+\\s)*FROM/, \"\");\n    const array = alls.map((element) => {\n      const cur = element.replace(/\\.\\*$/, \"\");\n      const arr = tables.split(\" \");\n      const index = arr.findIndex((el) => el === cur);\n\n      return { table: arr[index - 1], alias: cur };\n    });\n    setFullTables(array);\n  }\n\n  function setInputData(e) {\n    const arg = e.target.value;\n    setNamesDataSelectValue(arg);\n    checkFullTables(arg);\n    setNamesInputed(true);\n  }\n\n  useEffect(() => {\n\n    if (fullTables.length === aliases.length) {\n      const finString = namesDataSelectValue.replace(/\\S+\\.\\*/gi, (match) => {\n        const cur = match.replace(/\\.\\*$/, \"\");\n        const coluumns = aliases.find((i) => i.alias === cur).data;\n        const data = coluumns.map((i) => `${cur}.${i}`);\n\n        return data;\n      });\n      let tmp = selectCutter(finString);\n      let newData = [...tmp];\n      setNamesArray(newData);\n    }\n  }, [\n    fullTables.length,\n    aliases.length,\n    namesDataSelectValue,\n    fullTables,\n    aliases,\n  ]);\n\n  function setData(val) {\n\n    if (!isDataInputed) {\n      const currentVal = stringUpdater(val);\n      setDataSelectValue(val);\n      setDataInputed(true);\n      setDataArray(currentVal);\n    }\n  }\n\n  function dataUpdater(arr) {\n    const first = arr[0];\n    const array = [];\n    arr.forEach((i, ind) => {\n\n      if (\n        ind % (namesArray.length - 1) === 0 &&\n        ind !== 0 &&\n        ind !== arr.length - 1\n      ) {\n        const curr = i.slice(0, 0 - first.length - 1);\n        const next = i.slice(0 - first.length);\n        array.push(curr);\n        array.push(next);\n      } else {\n        array.push(i);\n      }\n    });\n\n    return array;\n  }\n\n  function script() {\n    let data = dataUpdater(dataArray);\n    data = arrayLengthStabilizate(namesArray.length, data);\n    const tmp = [];\n    console.log(namesArray, data)\n\n    for (let k = 0; k < namesArray.length; k++) {\n      let tmpArr = [];\n\n      for (let i = 0; i < data.length; i++) {\n        tmpArr.push(data[i][k]);\n      }\n\n      if (\n        !tmpArr.every((el) => el === null || el === undefined || el === \"null\")\n      ) {\n        tmp.push(k);\n      }\n      setScriptRunned(false);\n    }\n    const arr2upd = arrayUpdater(namesArray, tmp);\n    const arr1upd = data.map((i) => arrayUpdater(i, tmp));\n    const res = [arr2upd, ...arr1upd];\n    setResult(res.filter((i) => !i.every((k) => k === null)));\n    setScriptRunned(true);\n  }\n\n  return !isScriptRunned ? (\n    <section>\n      {!isDataInputed ? (\n        <article>\n          <label htmlFor=\"data_input\">\n            Вставьте данные (результат запроса)\n          </label>\n          <input\n            type=\"text\"\n            id=\"data_input\"\n            name=\"data_input\"\n            placeholder=\"Вставьте данные\"\n            value={dataSelectValue}\n            onChange={(e) => setData(e.target.value)}\n          />\n        </article>\n      ) : (\n        <>\n          <p>Данные приняты</p>\n          {!namesInputed ? (\n            <article>\n              <label htmlFor={`names_input`}>Вставьте SQL-запрос</label>\n              <input\n                type=\"text\"\n                id={`names_input`}\n                name={`names_input`}\n                placeholder=\"Вставьте имена столбцов\"\n                value={namesDataSelectValue}\n                onChange={setInputData}\n              />\n            </article>\n          ) : (\n            <p>Данные приняты</p>\n          )}\n          {fullTables.length > 0\n            ? fullTables.map((item, index) => (\n                <Alias\n                  key={`alias-${index}`}\n                  data={item}\n                  index={index}\n                  aliases={aliases}\n                  setAliases={setAliases}\n                />\n              ))\n            : \"\"}\n          <button\n            className=\"main_button\"\n            disabled={fullTables.length !== aliases.length}\n            onClick={script}\n          >\n            Run\n          </button>\n        </>\n      )}\n    </section>\n  ) : (\n    <Table data={result} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}