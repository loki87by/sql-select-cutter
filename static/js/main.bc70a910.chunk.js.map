{"version":3,"sources":["utils/consts.js","assets/copy.svg","components/Alias/Alias.js","assets/close.svg","assets/copy copy.svg","components/Popup/Popup.js","assets/eye.svg","components/Table/Table.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["arrayUpdater","array","notNullIndexes","map","i","ind","includes","filter","Alias","props","isDataInputed","setDataInputed","useState","sqlQuery","concat","data","table","clipboard","useClipboard","onError","alert","copiedTimeout","_jsx","children","_jsxs","style","backgroundColor","width","padding","margin","Highlight","className","onClick","copy","cursor","src","alt","htmlFor","index","type","id","name","placeholder","value","onChange","e","val","arr","aliases","slice","push","split","alias","setAliases","setData","target","Popup","popupIsOpen","code","title","closePopup","close","str","level","tab","formattedXML","replace","forEach","node","cur","console","log","length","indent","match","repeat","beautifyCode","Table","xmls","setXmls","currentXml","setCurrentXml","setPopupOpened","useEffect","undefined","row","cell","find","_Fragment","string","el","copyColumn","eye","openPopup","App","isScriptRunned","setScriptRunned","namesArray","setNamesArray","result","setResult","dataArray","setDataArray","dataSelectValue","setDataSelectValue","namesDataSelectValue","setNamesDataSelectValue","namesInputed","setNamesInputed","fullTables","setFullTables","finString","newData","toLowerCase","p1","p2","arg","alls","tables","toUpperCase","element","findIndex","checkFullTables","item","disabled","first","curr","next","dataUpdater","q","columnsQ","tmp","arrayLengthStabilizate","k","tmpArr","every","res","currentVal","inputString","temp","inTag","inQuotes","trim","stringUpdater","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc70a910.chunk.js","sourcesContent":["/* eslint-disable no-useless-escape */\n\nexport function stringUpdater(str) {\n  const inputString = str.replace(/( +)|(\\n+)/g, (match, p1, p2) => {\n    if (p1) {\n      return \" \";\n    } else if (p2) {\n      return \", \";\n    } else {\n      return match;\n    }\n  });\n  let result = [];\n  let temp = \"\";\n  let inTag = false;\n  let inQuotes = false;\n\n  for (let i = 0; i < inputString.length; i++) {\n    if (inputString[i] === \"<\") {\n      inTag = true;\n      temp += inputString[i];\n    } else if (inputString[i] === \">\") {\n      inTag = false;\n      temp += inputString[i];\n    } else if (inputString[i] === '\"' && !inTag) {\n      inQuotes = !inQuotes;\n    } else if (inputString[i] === \",\" && !inTag && !inQuotes) {\n      result.push(temp);\n      temp = \"\";\n    } else {\n        temp += inputString[i];\n    }\n  }\n  result.push(temp);\n  return result.map((val) => (val.trim() === \"\" ? null : val.trim()));\n}\n\nexport function arrayUpdater(array, notNullIndexes) {\n  const arrayUpdate = array.map((i, ind) => {\n    if (notNullIndexes.includes(ind)) {\n      return i;\n    } else {\n      return null;\n    }\n  });\n  return arrayUpdate.filter((i) => i !== null);\n}\n\nexport const selectCutter = (data) => {\n  const select = data\n    .toLowerCase()\n    .replace(/select\\s*/, \"\")\n    .replace(/\\s*from\\s[\\s\\S]*/, \"\");\n  const string = select.replace(/( +)|(\\n)/g, (match, p1, p2) => {\n    if (p1) {\n      return \" \";\n    } else if (p2) {\n      return \"\\n\";\n    } else {\n      return match;\n    }\n  });\n  const array = string.replace(\" \", \"\").split(\",\");\n  const res = array.map((i) => {\n    return i.replace(/^\\S*\\s/, \"\");\n  });\n  return res;\n};\n\nexport function arrayLengthStabilizate(q, arr) {\n  const columnsQ = q;\n  let array = [];\n  if (arr.length === columnsQ) {\n    array.push(arr);\n  } else {\n    for (let i = 1; i <= arr.length / columnsQ; i++) {\n      const tmp = [];\n      arr.forEach((item, ind) => {\n        if (ind < columnsQ * i && ind >= columnsQ * (i - 1)) {\n          tmp.push(item);\n        }\n      });\n      array.push(tmp);\n    }\n  }\n  return array;\n}\n\nexport const queryStart = `SELECT column_name\nFROM USER_TAB_COLUMNS\nWHERE table_name = '`;\n\nexport const queryEnd = `'\norder by column_id;`;\n","export default __webpack_public_path__ + \"static/media/copy.067cf7a4.svg\";","import React, { useState } from \"react\";\nimport { useClipboard } from \"use-clipboard-copy\";\nimport { queryStart, queryEnd } from \"../../utils/consts\";\nimport Highlight from \"react-highlight\";\nimport copy from \"../../assets/copy.svg\";\nimport \"./Alias.css\";\n\nfunction Alias(props) {\n  const [isDataInputed, setDataInputed] = useState(false);\n\n  const sqlQuery = `${queryStart}${props.data.table}${queryEnd}`;\n\n  const clipboard = useClipboard({\n    onError() {\n      alert(\"Произошла непредвиденная ошибка\");\n    },\n    copiedTimeout: 3000,\n  });\n\n  function copyCode() {\n    clipboard.copy(sqlQuery);\n  }\n\n  function setData(val) {\n    const arr = props.aliases.slice();\n    arr.push({\n      data: val.split(/,|\\s+/),\n      alias: props.data.alias,\n    });\n    setDataInputed(true);\n    props.setAliases(arr);\n  }\n\n  return !isDataInputed ? (\n    <section\n      style={{\n        backgroundColor: \"rgba(253, 241, 241, .42)\",\n        width: \"max-content\",\n        padding: \"1vmin\",\n        margin: \"1vmax\",\n      }}\n    >\n      <p>Скопируйте следующий код:</p>\n      <Highlight className=\"sql\">{sqlQuery}</Highlight>\n      <article onClick={copyCode} style={{ cursor: \"pointer\" }}>\n        <img src={copy} alt=\"копировать\" />\n        <p>Скопировать код</p>\n      </article>\n      <p>Вставьте его в свою IDE и запустите</p>\n      <article>\n        <label htmlFor={`alias_${props.index}_input`}>\n          Вставьте данные (результат запроса)\n        </label>\n        <input\n          type=\"text\"\n          id={`alias_${props.index}_input`}\n          name={`alias_${props.index}_input`}\n          placeholder=\"Вставьте данные\"\n          value={\"\"}\n          onChange={(e) => setData(e.target.value)}\n        />\n      </article>\n    </section>\n  ) : (\n    <p>Данные приняты</p>\n  );\n}\n\nexport default Alias;\n","export default __webpack_public_path__ + \"static/media/close.ec18e898.svg\";","export default __webpack_public_path__ + \"static/media/copy copy.39535df2.svg\";","import React from \"react\";\nimport { useClipboard } from \"use-clipboard-copy\";\nimport close from \"../../assets/close.svg\";\nimport copy from \"../../assets/copy copy.svg\";\nimport Highlight from \"react-highlight\";\nimport \"./Popup.css\";\n\nfunction Popup(props) {\n  const beautifyCode = (str) => {\n    let level = 0;\n    let tab = \"  \";\n    let formattedXML = \"\";\n\n    str = str\n      .replace(/>/g, \">\\n\")\n      .replace(/<\\/(?!\\/)/g, \"\\n</\")\n      .replace(\"\\n*\", \"\\n\");\n    const arr = str.split(\"\\n\");\n    arr.forEach((node) => {\n      const cur = node.replace(\"\\n\", \"\");\n      console.log(node, cur, node === cur, node.length);\n      let indent = \"\";\n      if (cur.match(/^<\\/[\\w\\W]*>$/)) {\n        level--;\n        indent = tab.repeat(level);\n      } else if (cur.match(/^<[\\w\\W]*>$/)) {\n        indent = tab.repeat(level);\n        level++;\n      } else {\n        indent = tab.repeat(level);\n      }\n      if (cur.length > 0) {\n        formattedXML += indent + cur + \"\\n\";\n      }\n    });\n    return formattedXML;\n  };\n  const clipboard = useClipboard({\n    onError() {\n      alert(\"Произошла непредвиденная ошибка\");\n    },\n    copiedTimeout: 3000,\n  });\n\nfunction copyXml() {\n      clipboard.copy(props.code);\n  }\n\n  return (\n    <section className={`Popup ${props.popupIsOpen && \"Popup_opened\"}`}>\n      <article  className=\"Popup_buttons\" >\n      <article className=\"Popup_button\" onClick={copyXml}>\n        <h3>Копировать </h3>\n        <img className=\"Popup_button-image\" src={copy} alt=\"закрыть\" title=\"закрыть\" />\n      </article>\n      <article className=\"Popup_button\" onClick={props.closePopup}>\n        <h3>Закрыть </h3>\n        <img className=\"Popup_button-image\" src={close} alt=\"закрыть\" title=\"закрыть\" />\n      </article>\n      </article>\n      <Highlight className=\"xml\">{beautifyCode(props.code)}</Highlight>\n    </section>\n  );\n}\n\nexport default Popup;\n","export default __webpack_public_path__ + \"static/media/eye.f1a3a460.svg\";","import React, { useState, useEffect } from \"react\";\nimport { useClipboard } from \"use-clipboard-copy\";\nimport Popup from \"../Popup/Popup\";\nimport copy from \"../../assets/copy.svg\";\nimport eye from \"../../assets/eye.svg\";\nimport \"./Table.css\";\n\nfunction Table(props) {\n  const [xmls, setXmls] = useState([]);\n  const [currentXml, setCurrentXml] = useState(\"\");\n  const [popupIsOpen, setPopupOpened] = useState(false);\n  const clipboard = useClipboard({\n    onError() {\n      alert(\"Произошла непредвиденная ошибка\");\n    },\n    copiedTimeout: 3000,\n  });\n\n  function openPopup(index) {\n    setCurrentXml(xmls[index]);\n    setPopupOpened(true);\n  }\n\n  function closePopup() {\n    setCurrentXml(\"\");\n    setPopupOpened(false);\n  }\n\n  function copyColumn(index) {\n    let string = \"\";\n    props.data.forEach((el, ind) => {\n      if (ind === 0) {\n        string = `${el[index]}: `;\n      } else if (ind === props.data.length - 1) {\n        string += `${el[index]}.`;\n      } else {\n        string += `${el[index]}, `;\n      }\n      clipboard.copy(string);\n    });\n  }\n\n  useEffect(() => {\n    if (props.data !== undefined) {\n      const arr =\n        props.data\n          .map((row, ind) =>\n            row.map((cell) => {\n              if (cell[0] === \"<\" && cell[cell.length - 1] === \">\") {\n                return cell;\n              } else {\n                return null;\n              }\n            })\n            .find((i) => i !== null)\n          )\n      setXmls(arr)\n    }\n  }, [props.data]);\n\n  return (\n    <>\n      <table>\n        <tbody>\n          {props.data.map((row, ind) => (\n            <tr key={`row-${ind}`}>\n              {row.map((cell, index) => {\n                return (\n                  <td\n                    title={ind === 1 ? \"копировать данные столбца в буфер\" : \"\"}\n                    key={`cell-${index}`}\n                  >\n                    {cell[0] === \"<\" && cell[cell.length - 1] === \">\"\n                      ? \"XML\"\n                      : cell}\n                    {ind === 0 ? (\n                      <img\n                        src={copy}\n                        alt=\"копировать\"\n                        title=\"копировать\"\n                        onClick={() => {\n                          copyColumn(index);\n                        }}\n                      />\n                    ) : (\n                      \"\"\n                    )}\n                    {cell[0] === \"<\" && cell[cell.length - 1] === \">\" ? (\n                      <img\n                        src={eye}\n                        alt=\"показать\"\n                        title=\"показать\"\n                        onClick={() => {\n                          openPopup(ind);\n                        }}\n                      />\n                    ) : (\n                      \"\"\n                    )}\n                  </td>\n                );\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <Popup\n        popupIsOpen={popupIsOpen}\n        code={currentXml}\n        closePopup={closePopup}\n      />\n    </>\n  );\n}\n\nexport default Table;\n","import React, { useEffect, useState } from \"react\";\nimport Alias from \"../Alias/Alias\";\nimport Table from \"../Table/Table\";\nimport {\n  stringUpdater,\n  arrayUpdater,\n  selectCutter,\n  arrayLengthStabilizate,\n} from \"../../utils/consts\";\nimport \"../../vendor/normalize.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const [isScriptRunned, setScriptRunned] = useState(false);\n  const [isDataInputed, setDataInputed] = useState(false);\n  const [namesArray, setNamesArray] = useState([]);\n  const [result, setResult] = useState([]);\n  const [dataArray, setDataArray] = useState([]);\n  const [dataSelectValue, setDataSelectValue] = useState(\"\");\n  const [namesDataSelectValue, setNamesDataSelectValue] = useState(\"\");\n  const [namesInputed, setNamesInputed] = useState(false);\n  const [fullTables, setFullTables] = useState([]);\n  const [aliases, setAliases] = useState([]);\n\n\n  function checkFullTables(str) {\n    const alls = str.match(/\\S+\\.\\*/gi);\n    const tables = str.toUpperCase().replace(/(\\S+\\s)*FROM/, \"\");\n    const array = alls.map((element) => {\n      const cur = element.replace(/\\.\\*$/, \"\");\n      const arr = tables.split(\" \");\n      const index = arr.findIndex((el) => el === cur);\n\n      return { table: arr[index - 1], alias: cur };\n    });\n    setFullTables(array);\n  }\n\n  function setInputData(e) {\n    const arg = e.target.value;\n    setNamesDataSelectValue(arg);\n    checkFullTables(arg);\n    setNamesInputed(true);\n  }\n\n  useEffect(() => {\n\n    if (fullTables.length === aliases.length) {\n      const finString = namesDataSelectValue.replace(/\\S+\\.\\*/gi, (match) => {\n        const cur = match.replace(/\\.\\*$/, \"\");\n        const coluumns = aliases.find((i) => i.alias === cur).data;\n        const data = coluumns.map((i) => `${cur}.${i}`);\n\n        return data;\n      });\n      let tmp = selectCutter(finString);\n      let newData = [...tmp];\n      setNamesArray(newData);\n    }\n  }, [\n    fullTables.length,\n    aliases.length,\n    namesDataSelectValue,\n    fullTables,\n    aliases,\n  ]);\n\n  function setData(val) {\n\n    if (!isDataInputed) {\n      const currentVal = stringUpdater(val);\n      setDataSelectValue(val);\n      setDataInputed(true);\n      setDataArray(currentVal);\n    }\n  }\n\n  function dataUpdater(arr) {\n    const first = arr[0];\n    const array = [];\n    arr.forEach((i, ind) => {\n\n      if (\n        ind % (namesArray.length - 1) === 0 &&\n        ind !== 0 &&\n        ind !== arr.length - 1\n      ) {\n        const curr = i.slice(0, 0 - first.length - 1);\n        const next = i.slice(0 - first.length);\n        array.push(curr);\n        array.push(next);\n      } else {\n        array.push(i);\n      }\n    });\n\n    return array;\n  }\n\n  function script() {\n    let data = dataUpdater(dataArray);\n    data = arrayLengthStabilizate(namesArray.length, data);\n    const tmp = [];\n\n    for (let k = 0; k < namesArray.length; k++) {\n      let tmpArr = [];\n\n      for (let i = 0; i < data.length; i++) {\n        tmpArr.push(data[i][k]);\n      }\n\n      if (\n        !tmpArr.every((el) => el === null || el === undefined || el === \"null\")\n      ) {\n        tmp.push(k);\n      }\n      setScriptRunned(false);\n    }\n    const arr2upd = arrayUpdater(namesArray, tmp);\n    const arr1upd = data.map((i) => arrayUpdater(i, tmp));\n    const res = [arr2upd, ...arr1upd];\n    setResult(res.filter((i) => !i.every((k) => k === null)));\n\n    setScriptRunned(true);\n  }\n\n  return !isScriptRunned ? (\n    <section>\n      {!isDataInputed ? (\n        <article>\n          <label htmlFor=\"data_input\">\n            Вставьте данные (результат запроса)\n          </label>\n          <input\n            type=\"text\"\n            id=\"data_input\"\n            name=\"data_input\"\n            placeholder=\"Вставьте данные\"\n            value={dataSelectValue}\n            onChange={(e) => setData(e.target.value)}\n          />\n        </article>\n      ) : (\n        <>\n          <p>Данные приняты</p>\n          {!namesInputed ? (\n            <article>\n              <label htmlFor={`names_input`}>Вставьте SQL-запрос</label>\n              <input\n                type=\"text\"\n                id={`names_input`}\n                name={`names_input`}\n                placeholder=\"Вставьте имена столбцов\"\n                value={namesDataSelectValue}\n                onChange={setInputData}\n              />\n            </article>\n          ) : (\n            <p>Данные приняты</p>\n          )}\n          {fullTables.length > 0\n            ? fullTables.map((item, index) => (\n                <Alias\n                  key={`alias-${index}`}\n                  data={item}\n                  index={index}\n                  aliases={aliases}\n                  setAliases={setAliases}\n                />\n              ))\n            : \"\"}\n          <button\n            className=\"main_button\"\n            disabled={fullTables.length !== aliases.length}\n            onClick={script}\n          >\n            Run\n          </button>\n        </>\n      )}\n    </section>\n  ) : (\n    <Table data={result} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}