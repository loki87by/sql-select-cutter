{"version":3,"sources":["utils/consts.js","components/InputSection/InputSection.js","assets/copy.svg","components/Table/Table.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["arrayUpdater","array","notNullIndexes","map","i","ind","includes","filter","InputSection","props","dataSelectValue","setDataSelectValue","useState","selectValue","setSelectValue","baseData","namesSelectValue","updateParentData","data","arg","point","oldData","slice","newData","tmp","toLowerCase","replace","match","p1","p2","split","selectCutter","setNamesSelectValue","_jsxs","children","_jsx","htmlFor","concat","index","type","id","name","placeholder","value","onChange","e","target","defaultValue","onClick","nextIndex","setTablesArray","tablesArray","Table","clipboard","useClipboard","onError","alert","copiedTimeout","row","cell","title","src","copy","alt","string","forEach","el","length","copyColumn","App","isScriptRunned","setScriptRunned","isDataInputed","setDataInputed","namesArray","setNamesArray","result","setResult","dataArray","setDataArray","setNames","val","_Fragment","Math","pow","className","disabled","arr","first","curr","next","push","dataUpdater","q","columnsQ","item","arrayLengthStabilizate","k","tmpArr","every","undefined","res","currentVal","str","inputString","temp","inTag","inQuotes","trim","stringUpdater","setData","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.529e2137.chunk.js","sourcesContent":["/* eslint-disable no-useless-escape */\n\nexport function stringUpdater(str) {\n  const inputString = str.replace(/( +)|(\\n+)/g, (match, p1, p2) => {\n    if (p1) {\n      return \" \";\n    } else if (p2) {\n      return \", \";\n    } else {\n      return match;\n    }\n  });\n  let result = [];\n  let temp = \"\";\n  let inTag = false;\n  let inQuotes = false;\n\n  for (let i = 0; i < inputString.length; i++) {\n    if (inputString[i] === \"<\") {\n      inTag = true;\n    } else if (inputString[i] === \">\") {\n      inTag = false;\n    } else if (inputString[i] === '\"' && !inTag) {\n      inQuotes = !inQuotes;\n    } else if (inputString[i] === \",\" && !inTag && !inQuotes) {\n      result.push(temp);\n      temp = \"\";\n    } else {\n      temp += inputString[i];\n    }\n  }\n  result.push(temp);\n  return result.map((val) => (val.trim() === \"\" ? null : val.trim()));\n}\n\nexport function arrayUpdater(array, notNullIndexes) {\n  const arrayUpdate = array.map((i, ind) => {\n    if (notNullIndexes.includes(ind)) {\n      return i;\n    } else {\n      return null;\n    }\n  });\n  return arrayUpdate.filter((i) => i !== null);\n}\n\nexport const selectCutter = (data) => {\n  const select = data\n    .toLowerCase()\n    .replace(/select\\s*/, \"\")\n    .replace(/\\s*from\\s[\\s\\S]*/, \"\");\n  const string = select.replace(/( +)|(\\n)/g, (match, p1, p2) => {\n    if (p1) {\n      return \" \";\n    } else if (p2) {\n      return \"\\n\";\n    } else {\n      return match;\n    }\n  });\n  const array = string.split(/,\\s/g);\n  const res = array.map((i) => {\n    return i.replace(/^\\S*\\s/, \"\");\n  });\n  return res;\n};\n","import React, { useState } from \"react\";\nimport { selectCutter } from \"../../utils/consts\";\nimport \"./InputSection.css\";\n\nfunction InputSection(props) {\n  const [dataSelectValue, setDataSelectValue] = useState(\"\");\n  const [selectValue, setSelectValue] = useState(0);\n  const baseData = props.namesSelectValue;\n\n  function updateParentData(data) {\n    const { arg, point } = data;\n    const oldData = baseData.slice();\n    let newData = [...oldData];\n    let tmp = [];\n    if (arg) {\n      tmp = selectCutter(arg);\n    }\n\n    if ((arg && selectValue > 0) || point > 0) {\n      newData = [...tmp, ...oldData];\n    } else {\n      newData = [...oldData, ...tmp];\n    }\n    props.setNamesSelectValue(newData);\n  }\n\n  function setInputData(e) {\n    setDataSelectValue(e.target.value);\n    updateParentData({ arg: e.target.value });\n  }\n\n  function setSelectData(e) {\n    setSelectValue(e.target.value);\n    updateParentData({ point: e.target.value });\n  }\n\n  function addSection() {\n    const nextIndex = props.index + 1;\n    props.setTablesArray([...props.tablesArray, nextIndex]);\n  }\n\n  return (\n    <article>\n      <label htmlFor={`names_${props.index}_input`}>\n        Вставьте имена столбцов\n      </label>\n      <input\n        type=\"text\"\n        id={`names_${props.index}_input`}\n        name={`names_${props.index}_input`}\n        placeholder=\"Вставьте имена столбцов\"\n        value={dataSelectValue}\n        onChange={setInputData}\n      />\n      {props.index > 1 ? (\n        <select defaultValue={0} onChange={setSelectData}>\n          <option value={0}>добавить справа</option>\n          <option value={1}>добавить слева</option>\n        </select>\n      ) : (\n        \"\"\n      )}\n      <button type=\"button\" onClick={addSection}>\n        добавить столбцы\n      </button>\n    </article>\n  );\n}\n\nexport default InputSection;\n","export default __webpack_public_path__ + \"static/media/copy.067cf7a4.svg\";","import React from \"react\";\r\nimport { useClipboard } from \"use-clipboard-copy\";\r\nimport copy from \"../../assets/copy.svg\";\r\nimport \"./Table.css\";\r\n\r\nfunction Table(props) {\r\n  const clipboard = useClipboard({\r\n    onError() {\r\n      alert(\"Произошла непредвиденная ошибка\");\r\n    },\r\n    copiedTimeout: 3000,\r\n  });\r\n\r\n  function copyColumn(index) {\r\n    let string = \"\";\r\n    props.data.forEach((el, ind) => {\r\n      if (ind === 0) {\r\n        string = `${el[index]}: `;\r\n      } else if (ind === props.data.length - 1) {\r\n        string += `${el[index]}.`;\r\n      } else {\r\n        string += `${el[index]}, `;\r\n      }\r\n      clipboard.copy(string);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        {props.data.map((row, ind) => (\r\n          <tr key={`row-${ind}`}>\r\n            {row.map((cell, index) => (\r\n              <td\r\n                title={ind === 1 ? \"копировать данные столбца в буфер\" : \"\"}\r\n                key={`cell-${index}`}\r\n              >\r\n                {cell}\r\n                {ind === 0 ? (\r\n                  <img\r\n                    src={copy}\r\n                    alt=\"копировать\"\r\n                    onClick={() => {\r\n                      copyColumn(index);\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, { useState } from \"react\";\nimport InputSection from \"../InputSection/InputSection\";\nimport Table from \"../Table/Table\";\nimport { stringUpdater, arrayUpdater } from \"../../utils/consts\";\nimport \"../../vendor/normalize.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const [isScriptRunned, setScriptRunned] = useState(false);\n  const [isDataInputed, setDataInputed] = useState(false);\n  const [namesArray, setNamesArray] = useState([]);\n  const [result, setResult] = useState([]);\n  const [dataArray, setDataArray] = useState([]);\n  const [tablesArray, setTablesArray] = useState([1]);\n  const [dataSelectValue, setDataSelectValue] = useState([]);\n  const [namesSelectValue, setNamesSelectValue] = useState([]);\n\n  function arrayLengthStabilizate(q, arr) {\n    const columnsQ = q;\n    let array = [];\n    if (arr.length === columnsQ) {\n      array.push(arr);\n    } else {\n      for (let i = 1; i <= arr.length / columnsQ; i++) {\n        const tmp = [];\n        arr.forEach((item, ind) => {\n          if (ind < columnsQ * i && ind >= columnsQ * (i - 1)) {\n            tmp.push(item);\n          }\n        });\n        array.push(tmp);\n      }\n    }\n\n    return array;\n  }\n\n  function setData(val) {\n    if (!isDataInputed) {\n      const currentVal = stringUpdater(val);\n      setDataSelectValue(currentVal);\n      setDataInputed(true);\n      setDataArray(currentVal);\n    }\n  }\n\n  function setNames(val) {\n    if (namesSelectValue.length > 0) {\n      setNamesSelectValue(val);\n    }\n\n    setNamesArray(val);\n  }\n\n  function dataUpdater(arr) {\n    const first = arr[0];\n    const array = [];\n    arr.forEach((i, ind) => {\n      if (\n        ind % (namesArray.length - 1) === 0 &&\n        ind !== 0 &&\n        ind !== arr.length - 1\n      ) {\n        const curr = i.slice(0, 0 - first.length - 1);\n        const next = i.slice(0 - first.length);\n        array.push(curr);\n        array.push(next);\n      } else {\n        array.push(i);\n      }\n    });\n    return array;\n  }\n\n  function script() {\n    let data = dataUpdater(dataArray);\n    data = arrayLengthStabilizate(namesArray.length, data);\n    const tmp = [];\n\n    for (let k = 0; k < namesArray.length; k++) {\n      let tmpArr = [];\n\n      for (let i = 0; i < data.length; i++) {\n        tmpArr.push(data[i][k]);\n      }\n\n      if (\n        !tmpArr.every((el) => el === null || el === undefined || el === \"null\")\n      ) {\n        tmp.push(k);\n      }\n      setScriptRunned(false);\n    }\n    const arr2upd = arrayUpdater(namesArray, tmp);\n    const arr1upd = data.map((i) => arrayUpdater(i, tmp));\n    const res = [arr2upd, ...arr1upd];\n    setResult(res.filter((i) => !i.every((k) => k === null)));\n    setScriptRunned(true);\n  }\n\n  return !isScriptRunned ? (\n    <section>\n      {!isDataInputed ? (\n        <article>\n          <label htmlFor=\"data_input\">Вставьте данные </label>\n          <input\n            type=\"text\"\n            id=\"data_input\"\n            name=\"data_input\"\n            placeholder=\"Вставьте данные\"\n            value={dataSelectValue}\n            onChange={(e) => setData(e.target.value)}\n          />\n        </article>\n      ) : (\n        <>\n          <p>Данные приняты</p>\n          {tablesArray.map((i) => (\n            <InputSection\n              key={`input_section-${Math.pow(i, i)}`}\n              index={i}\n              tablesArray={tablesArray}\n              namesSelectValue={namesSelectValue}\n              setTablesArray={setTablesArray}\n              setNamesSelectValue={setNames}\n            />\n          ))}\n          <button\n            className=\"main_button\"\n            disabled={namesArray.length === 0}\n            onClick={script}\n          >\n            Run\n          </button>\n        </>\n      )}\n    </section>\n  ) : (\n    <Table data={result} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}