{"version":3,"sources":["utils/consts.js","assets/copy.svg","components/Alias/Alias.js","components/Table/Table.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["stringUpdater","str","inputString","replace","match","p1","p2","result","temp","inTag","inQuotes","i","length","push","map","val","trim","arrayUpdater","array","notNullIndexes","ind","includes","filter","Alias","props","isDataInputed","setDataInputed","useState","sqlQuery","concat","data","table","clipboard","useClipboard","onError","alert","copiedTimeout","_jsx","children","_jsxs","src","copy","alt","onClick","htmlFor","index","type","id","name","placeholder","value","onChange","e","arr","aliases","slice","alias","setAliases","setData","target","Table","row","cell","title","string","forEach","el","copyColumn","App","isScriptRunned","setScriptRunned","namesArray","setNamesArray","setResult","dataArray","setDataArray","dataSelectValue","setDataSelectValue","namesDataSelectValue","setNamesDataSelectValue","namesInputed","setNamesInputed","fullTables","setFullTables","useEffect","finString","cur","find","newData","toLowerCase","split","_Fragment","arg","alls","tables","toUpperCase","element","findIndex","checkFullTables","item","className","disabled","first","curr","next","dataUpdater","q","columnsQ","tmp","arrayLengthStabilizate","k","tmpArr","every","undefined","res","currentVal","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3665c8f3.chunk.js","sourcesContent":["/* eslint-disable no-useless-escape */\n\nexport function stringUpdater(str) {\n  const inputString = str.replace(/( +)|(\\n+)/g, (match, p1, p2) => {\n    if (p1) {\n      return \" \";\n    } else if (p2) {\n      return \", \";\n    } else {\n      return match;\n    }\n  });\n  let result = [];\n  let temp = \"\";\n  let inTag = false;\n  let inQuotes = false;\n\n  for (let i = 0; i < inputString.length; i++) {\n    if (inputString[i] === \"<\") {\n      inTag = true;\n    } else if (inputString[i] === \">\") {\n      inTag = false;\n    } else if (inputString[i] === '\"' && !inTag) {\n      inQuotes = !inQuotes;\n    } else if (inputString[i] === \",\" && !inTag && !inQuotes) {\n      result.push(temp);\n      temp = \"\";\n    } else {\n      temp += inputString[i];\n    }\n  }\n  result.push(temp);\n  return result.map((val) => (val.trim() === \"\" ? null : val.trim()));\n}\n\nexport function arrayUpdater(array, notNullIndexes) {\n  const arrayUpdate = array.map((i, ind) => {\n    if (notNullIndexes.includes(ind)) {\n      return i;\n    } else {\n      return null;\n    }\n  });\n  return arrayUpdate.filter((i) => i !== null);\n}\n\nexport const selectCutter = (data) => {\n  const select = data\n    .toLowerCase()\n    .replace(/select\\s*/, \"\")\n    .replace(/\\s*from\\s[\\s\\S]*/, \"\");\n  const string = select.replace(/( +)|(\\n)/g, (match, p1, p2) => {\n    if (p1) {\n      return \" \";\n    } else if (p2) {\n      return \"\\n\";\n    } else {\n      return match;\n    }\n  });\n  const array = string.split(/,\\s/g);\n  const res = array.map((i) => {\n    return i.replace(/^\\S*\\s/, \"\");\n  });\n  return res;\n};\n\nexport function arrayLengthStabilizate(q, arr) {\n  const columnsQ = q;\n  let array = [];\n  if (arr.length === columnsQ) {\n    array.push(arr);\n  } else {\n    for (let i = 1; i <= arr.length / columnsQ; i++) {\n      const tmp = [];\n      arr.forEach((item, ind) => {\n        if (ind < columnsQ * i && ind >= columnsQ * (i - 1)) {\n          tmp.push(item);\n        }\n      });\n      array.push(tmp);\n    }\n  }\n  return array;}\n\nexport const query = `SELECT column_name\nFROM USER_TAB_COLUMNS\nWHERE table_name = `\n","export default __webpack_public_path__ + \"static/media/copy.067cf7a4.svg\";","import React, { useState } from \"react\";\nimport { useClipboard } from \"use-clipboard-copy\";\nimport { stringUpdater, query } from \"../../utils/consts\";\nimport copy from \"../../assets/copy.svg\";\nimport \"./Alias.css\";\n\nfunction Alias(props) {\n  const [isDataInputed, setDataInputed] = useState(false);\n\n  const sqlQuery = `${query} ${props.data.table};`;\n\n  const clipboard = useClipboard({\n    onError() {\n      alert(\"Произошла непредвиденная ошибка\");\n    },\n    copiedTimeout: 3000,\n  });\n\n  function copyCode() {\n    clipboard.copy(sqlQuery);\n  }\n\n  function setData(val) {\n    const arr = props.aliases.slice()\n    arr.push({\n      data: stringUpdater(val),\n      alias: props.data.alias\n    })\n    setDataInputed(true)\n    props.setAliases(arr)\n  }\n\n  return (\n    !isDataInputed ?\n    <section>\n    <p>Скопируйте следующий код:</p>\n      <code>{sqlQuery}</code>\n      <article>\n                  <img\n                    src={copy}\n                    alt=\"копировать\"\n                    onClick={copyCode}\n                  />\n                  <p>Скопировать код</p>\n                  </article>\n    <p>Вставьте его в свою IDE и запустите</p>\n      <article>\n          <label htmlFor={`alias_${props.index}_input`}>\n            Вставьте данные (результат запроса)\n          </label>\n          <input\n            type=\"text\"\n            id={`alias_${props.index}_input`}\n            name={`alias_${props.index}_input`}\n            placeholder=\"Вставьте данные\"\n            value={''}\n            onChange={(e) => setData(e.target.value)}\n          />\n        </article>\n    </section>\n    :\n    <p>Данные приняты</p>\n  );\n}\n\nexport default Alias;\n","import React from \"react\";\nimport { useClipboard } from \"use-clipboard-copy\";\nimport copy from \"../../assets/copy.svg\";\nimport \"./Table.css\";\n\nfunction Table(props) {\n  const clipboard = useClipboard({\n    onError() {\n      alert(\"Произошла непредвиденная ошибка\");\n    },\n    copiedTimeout: 3000,\n  });\n\n  function copyColumn(index) {\n    let string = \"\";\n    props.data.forEach((el, ind) => {\n      if (ind === 0) {\n        string = `${el[index]}: `;\n      } else if (ind === props.data.length - 1) {\n        string += `${el[index]}.`;\n      } else {\n        string += `${el[index]}, `;\n      }\n      clipboard.copy(string);\n    });\n  }\n\n  return (\n    <table>\n      <tbody>\n        {props.data.map((row, ind) => (\n          <tr key={`row-${ind}`}>\n            {row.map((cell, index) => (\n              <td\n                title={ind === 1 ? \"копировать данные столбца в буфер\" : \"\"}\n                key={`cell-${index}`}\n              >\n                {cell}\n                {ind === 0 ? (\n                  <img\n                    src={copy}\n                    alt=\"копировать\"\n                    onClick={() => {\n                      copyColumn(index);\n                    }}\n                  />\n                ) : (\n                  \"\"\n                )}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n","import React, { useEffect, useState } from \"react\";\nimport Alias from \"../Alias/Alias\";\nimport Table from \"../Table/Table\";\nimport {\n  stringUpdater,\n  arrayUpdater,\n  selectCutter,\n  arrayLengthStabilizate,\n} from \"../../utils/consts\";\nimport \"../../vendor/normalize.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const [isScriptRunned, setScriptRunned] = useState(false);\n  const [isDataInputed, setDataInputed] = useState(false);\n  const [namesArray, setNamesArray] = useState([]);\n  const [result, setResult] = useState([]);\n  const [dataArray, setDataArray] = useState([]);\n  const [dataSelectValue, setDataSelectValue] = useState(\"\");\n  const [namesDataSelectValue, setNamesDataSelectValue] = useState(\"\");\n  const [namesInputed, setNamesInputed] = useState(false);\n  const [fullTables, setFullTables] = useState([]);\n  const [aliases, setAliases] = useState([]);\n\n  function checkFullTables(str) {\n    const alls = str.match(/\\S+\\.\\*/gi);\n    const tables = str.toUpperCase().replace(/(\\S+\\s)*FROM/, \"\");\n    const array = alls.map((element) => {\n      const cur = element.replace(/\\.\\*$/, \"\");\n      const arr = tables.split(\" \");\n      const index = arr.findIndex((el) => el === cur);\n\n      return { table: arr[index - 1], alias: cur };\n    });\n    setFullTables(array);\n  }\n\n  function setInputData(e) {\n    const arg = e.target.value;\n    setNamesDataSelectValue(arg);\n    checkFullTables(arg);\n    setNamesInputed(true);\n  }\n\n  useEffect(() => {\n\n    if (fullTables.length === aliases.length) {\n      const finString = namesDataSelectValue.replace(/\\S+\\.\\*/gi, (match) => {\n        const cur = match.replace(/\\.\\*$/, \"\");\n        const table = fullTables.find((i) => i.alias === cur);\n        const coluumns = aliases.find((i) => i.alias === cur).data;\n        const data = coluumns.map((i) => `${table}.${i}`);\n\n        return data;\n      });\n      let tmp = selectCutter(finString);\n      let newData = [...tmp];\n      setNamesArray(newData);\n    }\n  }, [\n    fullTables.length,\n    aliases.length,\n    namesDataSelectValue,\n    fullTables,\n    aliases,\n  ]);\n\n  function setData(val) {\n\n    if (!isDataInputed) {\n      const currentVal = stringUpdater(val);\n      setDataSelectValue(val);\n      setDataInputed(true);\n      setDataArray(currentVal);\n    }\n  }\n\n  function dataUpdater(arr) {\n    const first = arr[0];\n    const array = [];\n    arr.forEach((i, ind) => {\n\n      if (\n        ind % (namesArray.length - 1) === 0 &&\n        ind !== 0 &&\n        ind !== arr.length - 1\n      ) {\n        const curr = i.slice(0, 0 - first.length - 1);\n        const next = i.slice(0 - first.length);\n        array.push(curr);\n        array.push(next);\n      } else {\n        array.push(i);\n      }\n    });\n\n    return array;\n  }\n\n  function script() {\n    let data = dataUpdater(dataArray);\n    data = arrayLengthStabilizate(namesArray.length, data);\n    const tmp = [];\n\n    for (let k = 0; k < namesArray.length; k++) {\n      let tmpArr = [];\n\n      for (let i = 0; i < data.length; i++) {\n        tmpArr.push(data[i][k]);\n      }\n\n      if (\n        !tmpArr.every((el) => el === null || el === undefined || el === \"null\")\n      ) {\n        tmp.push(k);\n      }\n      setScriptRunned(false);\n    }\n    const arr2upd = arrayUpdater(namesArray, tmp);\n    const arr1upd = data.map((i) => arrayUpdater(i, tmp));\n    const res = [arr2upd, ...arr1upd];\n    setResult(res.filter((i) => !i.every((k) => k === null)));\n    setScriptRunned(true);\n  }\n\n  return !isScriptRunned ? (\n    <section>\n      {!isDataInputed ? (\n        <article>\n          <label htmlFor=\"data_input\">\n            Вставьте данные (результат запроса)\n          </label>\n          <input\n            type=\"text\"\n            id=\"data_input\"\n            name=\"data_input\"\n            placeholder=\"Вставьте данные\"\n            value={dataSelectValue}\n            onChange={(e) => setData(e.target.value)}\n          />\n        </article>\n      ) : (\n        <>\n          <p>Данные приняты</p>\n          {!namesInputed ? (\n            <article>\n              <label htmlFor={`names_input`}>Вставьте SQL-запрос</label>\n              <input\n                type=\"text\"\n                id={`names_input`}\n                name={`names_input`}\n                placeholder=\"Вставьте имена столбцов\"\n                value={namesDataSelectValue}\n                onChange={setInputData}\n              />\n            </article>\n          ) : (\n            <p>Данные приняты</p>\n          )}\n          {fullTables.length > 0\n            ? fullTables.map((item, index) => (\n                <Alias\n                  key={`alias-${index}`}\n                  data={item}\n                  index={index}\n                  aliases={aliases}\n                  setAliases={setAliases}\n                />\n              ))\n            : \"\"}\n          <button\n            className=\"main_button\"\n            disabled={fullTables.length !== aliases.length}\n            onClick={script}\n          >\n            Run\n          </button>\n        </>\n      )}\n    </section>\n  ) : (\n    <Table data={result} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}